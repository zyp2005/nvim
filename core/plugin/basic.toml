# ------------------------------------------------------
# 基础插件
# ------------------------------------------------------

# 文本快速移动
[[plugins]]
repo = 'https://hub.fastgit.org/phaazon/hop.nvim.git'
on_map = ['<space>ef','<space>eF','<space>ew','<space>el','<space>ep',]
hook_source = '''
lua require'hop'.setup { keys = 'asdfghjkl', create_hl_autocmd = true}
nmap <space>ef :HopChar1<cr>
nmap <space>eF :HopChar2<cr>
nmap <space>ew :HopWord<cr>
nmap <space>el :HopLine<cr>
nmap <space>ep :HopPattern<cr>
'''

# 显示开始画面
[[plugins]]
repo = 'https://hub.fastgit.org/hardcoreplayers/dashboard-nvim.git'
hook_source = 'source $NVIM_PATH/modules/basic/dashboard-nvim.vim'

# 浮动终端
[[plugins]]
repo = 'https://hub.fastgit.org/voldikss/vim-floaterm'
on_cmd = 'FloatermNew'
on_map = '<leader>/'
hook_add = '''
	let  g:floaterm_keymap_new     =  '<M-f><M-o>'
	let g:floaterm_keymap_prev    =   '<M-f><M-p>'
	let  g:floaterm_keymap_next    =  '<M-f><M-n>'
	let  g:floaterm_keymap_kill    =  '<M-f><M-k>'
	let  g:floaterm_keymap_toggle  =  '<M-f><M-h>'
	nmap <M-f><M-o> :FloatermNew<cr>
'''
hook_source = ' source $NVIM_PATH/modules/basic/vim-floaterm.vim'


# 颜色主题
[[plugins]]
repo = 'https://hub.fastgit.org/sainnhe/gruvbox-material'
hook_source = 'source $NVIM_PATH/modules/basic/gruvbox-material.vim'

# ALT+e 窗口移动
[[plugins]]
repo = 'https://hub.fastgit.org/t9md/vim-choosewin'
on_map = '<Plug>'
hook_add = 'nmap <m-e> <Plug>(choosewin)'

[[plugins]]
repo = 'https://hub.fastgit.org/kevinhwang91/nvim-bqf.git'
hook_source = 'source $NVIM_PATH/modules/basic/nvim-bqf.vim'
on_func = ['Coc_qf_diagnostic','Coc_qf_jump2loc']
on_ft = 'qf'

# git支持
[[plugins]]
repo = 'https://hub.fastgit.org/tpope/vim-fugitive'
hook_add = 'nnoremap \g :Git '

# [[plugins]]
# repo = 'https://hub.fastgit.org/airblade/vim-gitgutter'
# hook_source = '''
#     let g:gitgutter_map_keys = 0
# let g:gitgutter_sign_added              = '┃'
#     let g:gitgutter_sign_modified           = '┃'
#     let g:gitgutter_sign_removed            = '┃'
#     let g:gitgutter_sign_removed_first_line = '┃'
#     let g:gitgutter_sign_removed_above_and_below = '┃'
#     let g:gitgutter_sign_modified_removed   = '┃'
# " navigate chunks of current buffer
# nmap <space>g- <Plug>(GitGutterPrevHunk)
# nmap <space>g= <Plug>(GitGutterNextHunk)
# "在光标下显示块信息。
# nmap <space>gh <Plug>(GitGutterPreviewHunk)
# " 显示当前块的提交。
# nmap <space>gsc <Plug>(coc-git-commit)
# " create text object for git chunks
# omap ig <Plug>(GitGutterTextObjectInnerPending)
# xmap ig <Plug>(GitGutterTextObjectInnerVisual)
# omap ag <Plug>(GitGutterTextObjectOuterPending)
# xmap ag <Plug>(GitGutterTextObjectOuterVisual)
# "撤消当前块。
# nmap <space>gu <Plug>(GitGutterUndoHunk)
# "暂存当前块。
# nmap <space>gs <Plug>(GitGutterStageHunk)
# ":CocCommand git.diffCached 在预览窗口中显示缓存的差异。
# nmap <space>gd :CocCommand git.diffCached<CR>
# ":CocCommand git.browserOpen 在浏览器中打开当前行，支持github url。
# nmap <space>gw :CocCommand git.browserOpen<CR>
# "折叠当前缓冲区的不变行。
# nmap <space>gf :GitGutterFold<CR>
# "在符号列中切换git gutter。
# nmap <space>gt :CocCommand git.toggleGutters<CR>

# nmap <space>gc :CocList commits<CR>
# nmap <space>ga :CocList gstatus<CR>
# nmap <space>gb :CocList branches<CR>
# '''

# [[plugins]]
# repo = 'https://hub.fastgit.org/tveskag/nvim-blame-line.git'
# on_event = 'BufRead'
# hook_source = '''
# autocmd  BufEnter  * EnableBlameLine
# '''

# 文本片段
[[plugins]]
repo = 'https://hub.fastgit.org/honza/vim-snippets.git'
on_event = 'BufRead'

# 书签
[[plugins]]
repo = 'https://hub.fastgit.org/MattesGroeger/vim-bookmarks.git'
on_map = '<Plug>Bookmark'
hook_add = 'source $NVIM_PATH/modules/basic/vim-bookmarks_add.vim'
hook_source = 'let g:bookmark_no_default_key_mappings = 1'

# 用sw使sudo保存
[[plugins]]
repo = 'https://hub.fastgit.org/lambdalisue/suda.vim'
on_event = 'FileChangedRO'
hook_add = 'source $NVIM_PATH/modules/basic/suda_add.vim'

#缩进
[[plugins]]
repo = 'https://hub.fastgit.org/Yggdroot/indentLine.git'
on_ft = ['c','cpp','vim','toml']
hook_add = '''
let g:indentLine_char_list = ['|', '¦', '┆', '┊']
let g:indentLine_fileType = ['c','cpp','vim','toml']
'''

# [[plugins]]
# repo = 'https://hub.fastgit.org/kyazdani42/nvim-tree.lua.git'
# hook_source = '''
# let g:nvim_tree_ignore = [ '.git', 'node_modules', '.cache' ] "empty by default
# let g:nvim_tree_auto_open = 1 "0 by default, opens the tree when typing `vim $DIR` or `vim`
# let g:nvim_tree_auto_close = 1 "0 by default, closes the tree when it's the last window
# let g:nvim_tree_auto_ignore_ft = [ 'startify', 'dashboard' ] "empty by default, don't auto open tree on specific filetypes.
# let g:nvim_tree_follow = 1 "0 by default, this option allows the cursor to be updated when entering a buffer
# let g:nvim_tree_indent_markers = 1 "0 by default, this option shows indent markers when folders are open
# let g:nvim_tree_git_hl = 1 "0 by default, will enable file highlight for git attributes (can be used without the icons).
# let g:nvim_tree_root_folder_modifier = ':~' "This is the default. See :help filename-modifiers for more options
# let g:nvim_tree_tab_open = 1 "0 by default, will open the tree when entering a new tab and the tree was previously open
# let g:nvim_tree_add_trailing = 1 "0 by default, append a trailing slash to folder names
# let g:nvim_tree_group_empty = 1 " 0 by default, compact folders that only contain a single folder into one node in the file tree
# let g:nvim_tree_lsp_diagnostics = 1 "0 by default, will show lsp diagnostics in the signcolumn. See :help nvim_tree_lsp_diagnostics
# let g:nvim_tree_quit_on_open = 1
# let g:nvim_tree_special_files = [ 'README.md', 'Makefile', 'MAKEFILE' ] " List of filenames that gets highlighted with NvimTreeSpecialFile
# let g:nvim_tree_show_icons = {
#     \ 'git': 1,
#     \ 'folders': 1,
#     \ 'files': 1,
#     \ }
#     let g:nvim_tree_icons = {
#         \ 'git' : {
#             \ 'unstaged': "~",
#             \ 'staged' : "M",
#             \ 'unmerged' : "",
#             \ 'renamed' : "→",
#             \ 'untracked': "?",
#             \ 'deleted': "-",
#             \ 'ignored': "!",
#             \},
#         \ 'lsp' : {
#             \ 'hint' : "H",
#             \ 'info' : "I",
#             \ 'warning' : "W",
#             \ 'error' : "E",
#             \}
#         \}
# "If 0, do not show the icons for one of 'git' 'folder' and 'files'
# "1 by default, notice that if 'files' is 1, it will only display
# "if nvim-web-devicons is installed and on your runtimepath

# " default will show icon by default if no icon is provided
# " default shows no icon by default
# nnoremap tt :NvimTreeToggle<CR>
# lua << EOF
# 	local tree_cb = require'nvim-tree.config'.nvim_tree_callback
# 	vim.g.nvim_tree_bindings = {
# 	  ["<CR>"] = ":YourVimFunction()<cr>",
# 	  ["u"] = ":lua require'some_module'.some_function()<cr>",

# 	  -- default mappings
# 	  ["<CR>"]           = tree_cb("edit"),
# 	  ["o"]              = tree_cb("edit"),
# 	  ["<2-LeftMouse>"]  = tree_cb("edit"),
# 	  ["<2-RightMouse>"] = tree_cb("cd"),
# 	  ["<C-]>"]          = tree_cb("cd"),
# 	  ["<C-v>"]          = tree_cb("vsplit"),
# 	  ["<C-x>"]          = tree_cb("split"),
# 	  ["<C-t>"]          = tree_cb("tabnew"),
# 	  ["<"]              = tree_cb("prev_sibling"),
# 	  [">"]              = tree_cb("next_sibling"),
# 	  ["P"]              = tree_cb("parent_node"),
# 	  ["<BS>"]           = tree_cb("close_node"),
# 	  ["<S-CR>"]         = tree_cb("close_node"),
# 	  ["<Tab>"]          = tree_cb("preview"),
# 	  ["K"]              = tree_cb("first_sibling"),
# 	  ["J"]              = tree_cb("last_sibling"),
# 	  ["I"]              = tree_cb("toggle_ignored"),
# 	  ["H"]              = tree_cb("toggle_dotfiles"),
# 	  ["R"]              = tree_cb("refresh"),
# 	  ["a"]              = tree_cb("create"),
# 	  ["d"]              = tree_cb("remove"),
# 	  ["r"]              = tree_cb("rename"),
# 	  ["<C-r>"]          = tree_cb("full_rename"),
# 	  ["x"]              = tree_cb("cut"),
# 	  ["c"]              = tree_cb("copy"),
# 	  ["p"]              = tree_cb("paste"),
# 	  ["g-"]             = tree_cb("prev_git_item"),
# 	  ["g="]             = tree_cb("next_git_item"),
# 	  ["-"]              = tree_cb("dir_up"),
# 	  ["q"]              = tree_cb("close"),
# 	}
# EOF

# '''

[[plugins]]
repo = 'https://hub.fastgit.org/kyazdani42/nvim-web-devicons'
